// Generated by CoffeeScript 1.3.3
(function() {
  var kinds, types,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  types = require('./types');

  kinds = types.kinds;

  exports.emptyValidators = {
    'empty array': function(val) {
      return !Array.isArray(val) || val.length > 0;
    },
    'null': function(val) {
      return (val != null) || (typeof val) !== 'object';
    },
    'undefined': function(val) {
      return (val != null) || typeof val !== 'undefined';
    }
  };

  exports.getValidators = function(types, validators) {
    var fns, type, _i, _len;
    fns = [];
    for (_i = 0, _len = types.length; _i < _len; _i++) {
      type = types[_i];
      if (__indexOf.call(kinds.empty, type) >= 0) {
        fns.push(validators[type]);
      }
    }
    if (fns.length === 0) {
      return null;
    } else {
      return fns;
    }
  };

  exports.makeValidator = function(fns) {
    if (fns != null) {
      return function(val) {
        var fn, valid, _i, _len;
        valid = false;
        for (_i = 0, _len = fns.length; _i < _len; _i++) {
          fn = fns[_i];
          if (fn(val)) {
            valid = true;
          }
        }
        return valid;
      };
    } else {
      return function(val) {
        return true;
      };
    }
  };

}).call(this);

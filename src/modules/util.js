// Generated by CoffeeScript 1.3.3
(function() {
  var camelPrep, getMissing, getName, getSteps, increment, resolve,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  camelPrep = function(s) {
    return s[0].toUpperCase() + s.slice(1);
  };

  exports.join = function(dest, source) {
    var key, val;
    for (key in source) {
      val = source[key];
      dest[key] = val;
    }
    return dest;
  };

  getSteps = function(path) {
    var steps;
    steps = path.split('/');
    return steps.slice(1, steps.length - 1);
  };

  resolve = function(obj, path) {
    var r, steps;
    steps = getSteps(path);
    r = function(obj, steps, done) {
      var key;
      if (done) {
        return null;
      } else if (steps.length === 0) {
        return obj;
      } else {
        key = steps.shift();
        if (obj[key] != null) {
          return r(obj[key], steps);
        } else {
          return r(obj, steps, true);
        }
      }
    };
    return r(obj, steps);
  };

  increment = function(arr) {
    var a, i, n, _i, _len;
    a = (function() {
      var _i, _len, _results;
      _results = [];
      for (_i = 0, _len = arr.length; _i < _len; _i++) {
        n = arr[_i];
        _results.push(n);
      }
      return _results;
    })();
    for (i = _i = 0, _len = a.length; _i < _len; i = ++_i) {
      n = a[i];
      if (!isNaN(n)) {
        a[i] = (+n + 1).toString();
      }
    }
    return a;
  };

  getName = function(path) {
    var r, steps;
    steps = increment(getSteps(path));
    r = function(s, steps) {
      if (steps.length === 0) {
        return s;
      } else {
        return r(s + camelPrep(steps.shift()), steps);
      }
    };
    return r(steps.shift(), steps);
  };

  getMissing = function(total, partial) {
    var el, result, _i, _len;
    result = [];
    for (_i = 0, _len = total.length; _i < _len; _i++) {
      el = total[_i];
      if (__indexOf.call(partial, el) < 0) {
        result.push(el);
      }
    }
    return result;
  };

  exports.camelPrep = camelPrep;

  exports.resolve = resolve;

  exports.getName = getName;

  exports.getMissing = getMissing;

}).call(this);
